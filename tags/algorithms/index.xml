<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms | pvnieo</title>
    <link>https://pvnieo.github.io/tags/algorithms/</link>
      <atom:link href="https://pvnieo.github.io/tags/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <description>Algorithms</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2019 Souhaib Attaiki, made with lots of ❤️ and steaming hot ☕️.</copyright><lastBuildDate>Thu, 02 Nov 2017 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://pvnieo.github.io/img/icon.png</url>
      <title>Algorithms</title>
      <link>https://pvnieo.github.io/tags/algorithms/</link>
    </image>
    
    <item>
      <title>My Algorithm Zoo</title>
      <link>https://pvnieo.github.io/project/algozoo/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://pvnieo.github.io/project/algozoo/</guid>
      <description>&lt;p&gt;Set of algorithms that I implemented for some random projects, either because I didn&amp;rsquo;t find an implementation in the language I want, or because the implementation didn&amp;rsquo;t suit me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implemented algorithms&lt;/strong&gt; so far:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RPCA: A Python implementation of the Principal Component Pursuit algorithm for robust PCA, based on this &lt;a href=&#34;https://statweb.stanford.edu/~candes/papers/RobustPCA.pdf&#34; target=&#34;_blank&#34;&gt;Robust Principal Component Analysis paper&lt;/a&gt; and this     &lt;a href=&#34;https://arxiv.org/pdf/1009.5055.pdf&#34; target=&#34;_blank&#34;&gt;Augmented Lagrange Multiplier Method paper&lt;/a&gt;. [&lt;a href=&#34;https://github.com/pvnieo/My-Algorithm-Zoo/blob/master/RPCA/demo.ipynb&#34; target=&#34;_blank&#34;&gt;demo&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;A pytorch implementation of Leslie N. Smith&amp;rsquo;s Learning rate finder method, first published in the paper &lt;a href=&#34;https://arxiv.org/pdf/1506.01186.pdf&#34; target=&#34;_blank&#34;&gt;Cyclical Learning Rates for Training Neural Networks&lt;/a&gt;. [&lt;a href=&#34;https://github.com/pvnieo/My-Algorithm-Zoo/blob/master/Learning%20rate%20finder/demo.ipynb&#34; target=&#34;_blank&#34;&gt;demo&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Project Euler solutions</title>
      <link>https://pvnieo.github.io/project/project-euler/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://pvnieo.github.io/project/project-euler/</guid>
      <description>

&lt;h2 id=&#34;what-is-project-euler&#34;&gt;What is Project Euler?&lt;/h2&gt;

&lt;p&gt;Project Euler is a set of challenging computational/algorithmic problems. Every so often,
new problems are added and old problems are changed to reduce cheating from other sources.
You can find the problems here: &lt;a href=&#34;https://projecteuler.net/problems&#34; target=&#34;_blank&#34;&gt;https://projecteuler.net/problems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Every solved problem has a program written in Python and C++.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
